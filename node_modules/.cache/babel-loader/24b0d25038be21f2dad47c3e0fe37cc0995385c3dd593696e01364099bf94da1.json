{"ast":null,"code":"import { omit } from '@antv/util';\n// Get point1 point2 radius.\nconst getR = (point1, point2) => {\n  return Math.sqrt(Math.pow(point1[0] - point2[0], 2) + Math.pow(point1[1] - point2[1], 2)) / 2;\n};\n// Gauge round.\nexport const Round = (options, context) => {\n  if (!context) return;\n  const {\n    coordinate\n  } = context;\n  if (!(coordinate === null || coordinate === void 0 ? void 0 : coordinate.getCenter)) return;\n  // Get coordinate center point.\n  const center = coordinate.getCenter();\n  return (points, cfg, defaultCfg) => {\n    const {\n      document\n    } = context.canvas;\n    const {\n      color,\n      index\n    } = cfg;\n    const g = document.createElement('g', {});\n    const minR = getR(points[0], points[1]);\n    const maxR = getR(points[0], center) * 2;\n    /**\n     * MinR small circle radius,  maxR big circle radius.\n     * Draw four arcs.\n     * Style lineWidth and stroke for the time being inset.\n     */\n    const roundPath = document.createElement('path', {\n      style: Object.assign(Object.assign(Object.assign({\n        d: [['M', ...points[0]], ['A', minR, minR, 0, 1, 0, ...points[1]], ['A', maxR + minR * 2, maxR + minR * 2, 0, 0, 0, ...points[2]], ['A', minR, minR, 0, 1, index === 0 ? 0 : 1, ...points[3]], ['A', maxR, maxR, 0, 0, 1, ...points[0]], ['Z']]\n      }, defaultCfg), omit(options, ['shape', 'last', 'first'])), {\n        fill: color || defaultCfg.color\n      })\n    });\n    g.appendChild(roundPath);\n    return g;\n  };\n};","map":{"version":3,"names":["omit","getR","point1","point2","Math","sqrt","pow","Round","options","context","coordinate","getCenter","center","points","cfg","defaultCfg","document","canvas","color","index","g","createElement","minR","maxR","roundPath","style","Object","assign","d","fill","appendChild"],"sources":["shape/gauge/round.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,IAAI,QAAQ,YAAY;AAKjC;AACA,MAAMC,IAAI,GAAGA,CAACC,MAAM,EAAEC,MAAM,KAAI;EAC9B,OACEC,IAAI,CAACC,IAAI,CACPD,IAAI,CAACE,GAAG,CAACJ,MAAM,CAAC,CAAC,CAAC,GAAGC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAGC,IAAI,CAACE,GAAG,CAACJ,MAAM,CAAC,CAAC,CAAC,GAAGC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CACxE,GAAG,CAAC;AAET,CAAC;AAED;AACA,OAAO,MAAMI,KAAK,GAAqBA,CAACC,OAAO,EAAEC,OAAO,KAAI;EAC1D,IAAI,CAACA,OAAO,EAAE;EACd,MAAM;IAAEC;EAAU,CAAE,GAAGD,OAAO;EAC9B,IAAI,EAACC,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEC,SAAS,GAAE;EAC5B;EACA,MAAMC,MAAM,GAAGF,UAAU,CAACC,SAAS,EAAa;EAEhD,OAAO,CAACE,MAAM,EAAEC,GAAG,EAAEC,UAAU,KAAI;IACjC,MAAM;MAAEC;IAAQ,CAAE,GAAGP,OAAO,CAACQ,MAAM;IACnC,MAAM;MAAEC,KAAK;MAAEC;IAAK,CAAE,GAAGL,GAAG;IAE5B,MAAMM,CAAC,GAAGJ,QAAQ,CAACK,aAAa,CAAC,GAAG,EAAE,EAAE,CAAC;IAEzC,MAAMC,IAAI,GAAGrB,IAAI,CAACY,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,CAAC;IACvC,MAAMU,IAAI,GAAGtB,IAAI,CAACY,MAAM,CAAC,CAAC,CAAC,EAAED,MAAM,CAAC,GAAG,CAAC;IAExC;;;;;IAKA,MAAMY,SAAS,GAAGR,QAAQ,CAACK,aAAa,CAAC,MAAM,EAAE;MAC/CI,KAAK,EAAAC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA;QACHC,CAAC,EAAE,CACD,CAAC,GAAG,EAAE,GAAGf,MAAM,CAAC,CAAC,CAAC,CAAC,EACnB,CAAC,GAAG,EAAES,IAAI,EAAEA,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAGT,MAAM,CAAC,CAAC,CAAC,CAAC,EACxC,CAAC,GAAG,EAAEU,IAAI,GAAGD,IAAI,GAAG,CAAC,EAAEC,IAAI,GAAGD,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAGT,MAAM,CAAC,CAAC,CAAC,CAAC,EAC9D,CAAC,GAAG,EAAES,IAAI,EAAEA,IAAI,EAAE,CAAC,EAAE,CAAC,EAAEH,KAAK,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,GAAGN,MAAM,CAAC,CAAC,CAAC,CAAC,EAC1D,CAAC,GAAG,EAAEU,IAAI,EAAEA,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAGV,MAAM,CAAC,CAAC,CAAC,CAAC,EACxC,CAAC,GAAG,CAAC;MACN,GACEE,UAAU,GACVf,IAAI,CAACQ,OAAO,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;QAC5CqB,IAAI,EAAEX,KAAK,IAAIH,UAAU,CAACG;MAAK;KAElC,CAAC;IAEFE,CAAC,CAACU,WAAW,CAACN,SAAS,CAAC;IAExB,OAAOJ,CAAC;EACV,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}